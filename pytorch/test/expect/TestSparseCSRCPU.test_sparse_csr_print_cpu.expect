# shape: torch.Size([10, 10])
# nnz: 10
# crow_indices shape: torch.Size([11])
# col_indices shape: torch.Size([10])
# values_shape: torch.Size([10])
########## torch.float32/torch.int32 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4], dtype=torch.int32)
# _col_indices
tensor([0, 1, 0, 1], dtype=torch.int32)
# _values
tensor([1., 2., 3., 4.])

########## torch.float64/torch.int32 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4], dtype=torch.int32)
# _col_indices
tensor([0, 1, 0, 1], dtype=torch.int32)
# _values
tensor([1., 2., 3., 4.], dtype=torch.float64)


########## torch.float32/torch.int64 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4])
# _col_indices
tensor([0, 1, 0, 1])
# _values
tensor([1., 2., 3., 4.])

########## torch.float64/torch.int64 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4])
# _col_indices
tensor([0, 1, 0, 1])
# _values
tensor([1., 2., 3., 4.], dtype=torch.float64)


# shape: torch.Size([100, 10])
# nnz: 10
# crow_indices shape: torch.Size([101])
# col_indices shape: torch.Size([10])
# values_shape: torch.Size([10])
########## torch.float32/torch.int32 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4], dtype=torch.int32)
# _col_indices
tensor([0, 1, 0, 1], dtype=torch.int32)
# _values
tensor([1., 2., 3., 4.])

########## torch.float64/torch.int32 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4], dtype=torch.int32)
# _col_indices
tensor([0, 1, 0, 1], dtype=torch.int32)
# _values
tensor([1., 2., 3., 4.], dtype=torch.float64)


########## torch.float32/torch.int64 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4])
# _col_indices
tensor([0, 1, 0, 1])
# _values
tensor([1., 2., 3., 4.])

########## torch.float64/torch.int64 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4])
# _col_indices
tensor([0, 1, 0, 1])
# _values
tensor([1., 2., 3., 4.], dtype=torch.float64)


# shape: torch.Size([1000, 10])
# nnz: 10
# crow_indices shape: torch.Size([1001])
# col_indices shape: torch.Size([10])
# values_shape: torch.Size([10])
########## torch.float32/torch.int32 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4], dtype=torch.int32)
# _col_indices
tensor([0, 1, 0, 1], dtype=torch.int32)
# _values
tensor([1., 2., 3., 4.])

########## torch.float64/torch.int32 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4], dtype=torch.int32)
# _col_indices
tensor([0, 1, 0, 1], dtype=torch.int32)
# _values
tensor([1., 2., 3., 4.], dtype=torch.float64)


########## torch.float32/torch.int64 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4])
# _col_indices
tensor([0, 1, 0, 1])
# _values
tensor([1., 2., 3., 4.])

########## torch.float64/torch.int64 ##########
# sparse tensor
tensor(crow_indices=tensor([0, 2, 4]),
       col_indices=tensor([0, 1, 0, 1]),
       values=tensor([1., 2., 3., 4.]), size=(2, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csr)
# _crow_indices
tensor([0, 2, 4])
# _col_indices
tensor([0, 1, 0, 1])
# _values
tensor([1., 2., 3., 4.], dtype=torch.float64)

